<?php

namespace proof\sql;

use proof\php\String;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-03 at 04:03:42.
 */
class PreparedStatementTest extends \PHPUnit_Framework_TestCase
{

    /**
     *
     * @var BasePDOConnection
     */
    protected $con;

    /**
     *
     * @var PreparedStatement
     */
    protected $pstmt;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $this->con = \proof\helpers\ConnectionHelper::getBaseConnection();

    }

    /**
     * @covers proof\sql\PreparedStatement::fetch
     */
    public function testFetch()
    {


        $this->pstmt = $this->con->prepare(new String("SELECT * FROM users WHERE username=':username'"));

        $this->pstmt->addNamedParameter('username', 'susie');

        $this->assertEquals(0, $this->pstmt->fetch($this->getMockForAbstractClass("proof\sql\FetchHandler")));

    }

    /**
     * @covers proof\sql\PreparedStatement::push
     */
    public function testPush()
    {

        $this->pstmt = $this->con->prepare
                (new String("INSERT INTO users (username, password, email) VALUES (?,?,?)"));

        $this->pstmt->addParameter("meta");

        $this->pstmt->addParameter("password");

        $this->pstmt->addParameter("meta@localhost.net");

        $this->assertEquals(1, $this->pstmt->push());


        $sql = new String("DELETE FROM  users WHERE username=?");

        $this->pstmt = $this->con->prepare($sql);

        $this->pstmt->addParameter('meta');

        $this->pstmt->push();

    }

}
