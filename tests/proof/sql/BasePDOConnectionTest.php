<?php

namespace pelau\sql;

use pelau\php\String;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-03 at 04:33:26.
 */
class BasePDOConnectionTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var BasePDOConnection
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = \pelau\helpers\ConnectionHelper::getBaseConnection();

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers pelau\sql\BasePDOConnection::connect
     */
    public function testConnect()
    {

        $this->assertTrue($this->object->connect());

    }

    /**
     * @covers pelau\sql\BasePDOConnection::isConnected
     */
    public function testIsConnected()
    {

        $this->assertTrue($this->object->isConnected());

    }

    /**
     * @covers pelau\sql\BasePDOConnection::disconnect
     */
    public function testDisconnect()
    {

        $this->assertNull($this->object->disconnect());

        $this->assertFalse($this->object->isConnected());

    }

    /**
     * @covers pelau\sql\BasePDOConnection::create
     */
    public function testCreate()
    {

        $this->assertInstanceOf("pelau\sql\Statement", $this->object->create(new String("Select * from users")));

    }

    /**
     * @covers pelau\sql\BasePDOConnection::prepare
     */
    public function testPrepare()
    {

        $this->assertInstanceOf("pelau\sql\PreparedStatement", $this->object->prepare(new String("Select * from users")));

    }

}
