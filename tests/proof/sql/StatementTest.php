<?php

namespace pelau\sql;

use pelau\php\String;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-03 at 15:30:32.
 */
class StatementTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Statement
     */
    protected $stmt;

    /**
     *
     * @var BasePDOConnection
     */
    protected $con;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $this->con = \pelau\helpers\ConnectionHelper::getBaseConnection();

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers pelau\sql\Statement::fetch
     * @todo   Implement testFetch().
     */
    public function testFetch()
    {

        $this->stmt = $this->con->create(new String("SELECT * FROM users WHERE username='susie"));

        $this->assertEquals(0, $this->stmt->fetch($this->getMockForAbstractClass("pelau\sql\FetchHandler")));

    }

    /**
     * @covers pelau\sql\Statement::push
     * @todo   Implement testPush().
     */
    public function testPush()
    {

        $this->stmt = $this->con->create
                (new String("INSERT INTO users (username, password, email) VALUES ('meta','pass','me@localhost.com')"));

        $this->assertEquals(1, $this->stmt->push());

        $sql = new String("DELETE * FROM  users WHERE username=''");

        $this->stmt = $this->con->prepare($sql);

        $this->stmt->push();

    }

}
