<?php

namespace pelau\util;


/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-03-19 at 04:59:58.
 */
class AggregateTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @covers \pelau\util\Aggregate::size
     */
    public function testSize()
    {

        $stubEmpty = $this->getMockForAbstractClass('\pelau\util\Aggregate', [array()]);

        $this->assertEquals(0, $stubEmpty->size());

        $stubFull = $this->getMockForAbstractClass('\pelau\util\Aggregate', [array(1,2,3)]);

        $this->assertEquals(3, $stubFull->size());

    }

    /**
     * @covers \pelau\util\Aggregate::isEmpty
     */
    public function testIsEmpty()
    {

        $stubEmpty = $this->getMockForAbstractClass('\pelau\util\Aggregate', [array()]);

        $this->assertTrue($stubEmpty->isEmpty());

        $stubFull = $this->getMockForAbstractClass('\pelau\util\Aggregate', [array(1,2,3)]);

        $this->assertFalse($stubFull->isEmpty());


    }

      /**
     * @covers \pelau\util\Aggregate::clear()
     */
    public function testClear()
    {

        $stub = $this->getMockForAbstractClass('\pelau\util\Aggregate', [array(1,2,3)]);
        
        $this->assertInstanceOf('\pelau\util\Aggregate', $stub->clear());


    }

}
