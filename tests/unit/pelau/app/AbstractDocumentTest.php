<?php

namespace proof\app;

use proof\php\String;


/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-22 at 10:59:02.
 */
class AbstractDocumentTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var AbstractDocument
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = $this->getMockForAbstractClass("proof\\app\\AbstractDocument");

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers proof\app\AbstractDocument::addTemplates
     */
    public function testAddTemplates()
    {

        $this->assertInstanceOf(get_class($this->object), $this->object->addTemplates(new String('/path')));

    }

    /**
     * @covers proof\app\AbstractDocument::clear
     */
    public function testClear()
    {

        $this->assertNull($this->object->clear());

    }

    /**
     * @covers proof\app\AbstractDocument::get
     * @depends testPut
     */
    public function testGet()
    {

        $this->object->put("stub", new String(' a string'));

        $this->assertEquals("a string", $this->object->get("stub"));

    }

    /**
     * @covers proof\app\AbstractDocument::put
     */
    public function testPut()
    {

        $this->assertInstanceOf(get_class($this->object), $this->object->put("stub", new String(' a string')));
    }


}
