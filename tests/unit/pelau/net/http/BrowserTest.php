<?php

namespace proof\net\http;


/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-12-22 at 18:05:20.
 */
class BrowserTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Browser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Browser;

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {



    }

    /**
     * @covers proof\net\http\Browser::addListener
     */
    public function testAddListener()
    {


        $this->assertInstanceOf(get_class($this->object), $this->object->addListener(
                                               $this->getMock("proof\\net\\http\\HttpListener")));


    }

    /**
     * @covers proof\net\http\Browser::submit
     */
    public function testSubmit()
    {

        $this->assertNull($this->object->submit());

    }

    /**
     * @covers proof\net\http\Browser::getUAString
     */
    public function testGetUAString()
    {

        $_SERVER['USER_AGENT']  = "Mock Agent";

        $this->assertEquals($_SERVER['USER_AGENT'], $this->object->getUAString());

    }

    /**
     * @covers proof\net\http\Browser::getCookies
     */
    public function testGetCookies()
    {

        $_COOKIE = ["name"=>'Jon', "age"=>120];

        $cookies = $this->object->getCookies();

        $this->assertInstanceOf("proof\util\Map", $cookies);

        $this->assertEquals("Jon", $cookies->get('name'));

    }

    /**
     * @covers proof\net\http\Browser::getRemoteAddress
     */
    public function testGetRemoteAddress()
    {

        $_SERVER['REMOTE_ADDRESS'] = "127.0.0.1";

        $this->assertEquals($_SERVER['REMOTE_ADDRESS'], $this->object->getRemoteAddress());

    }

    /**
     * @covers proof\net\http\Browser::redirect
     * @todo   Implement testRedirect().
     */
    public function testRedirect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );

    }

}
