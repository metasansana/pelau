<?php

namespace proof\util;


require_once dirname(__FILE__) . '/../../../../proof/util/AbstractAggregate.php';

/**
 * Test class for AbstractAggregate.
 * Generated by PHPUnit on 2012-07-24 at 04:17:48.
 */
class AbstractAggregateTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var AbstractAggregate
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $this->object = $this->getMockForAbstractClass(__NAMESPACE__ . '\AbstractAggregate', array(array(1,2,3)));

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }



    /**
     * @covers proof\util\AbstractAggregate::indexAt
     * @todo Implement testIndexAt().
     *
     */
    public function testIndexAt()
    {

        $this->assertTrue($this->object->indexAt(2));

        $this->assertFalse($this->object->indexAt(7));

    }

    public function testItemAt()
    {
        $this->assertTrue($this->object->itemAt(0));

        $this->assertFalse($this->object->itemAt(14));
    }

    /**
     * @covers proof\util\AbstractAggregate::get
     * @todo Implement testGet().
     * @expectedException  proof\util\IndexNotFoundException
     */
    public function testGet()
    {
        $this->assertEquals(2, $this->object->get(1));

        $this->object->get(28);

    }



    /**
     * @covers proof\util\AbstractAggregate::size
     * @todo Implement testSize().
     */
    public function testSizingWhenRemoving()
    {

        $this->assertEquals(3, $this->object->size());

        $this->object->remove(1);

        $this->assertEquals(2, $this->object->size());

        $this->object->clear();

        $this->assertEquals(0, $this->object->size());


    }

    /**
     * @covers proof\util\AbstractAggregate::toArray
     * @todo Implement testToArray().
     */
    public function testToArray()
    {

        $array = array(1, 2 ,3);

        $this->assertEquals($array, $this->object->toArray());

    }

    public function testForEmptiness()
    {
        $this->assertFalse($this->object->isEmpty());

        $this->object->clear();

        $this->assertTrue($this->object->isEmpty());
    }

}

?>
