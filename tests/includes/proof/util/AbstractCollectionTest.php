<?php

namespace proof\util;


require_once dirname(__FILE__) . '/../../../../proof/util/AbstractCollection.php';

/**
 * Test class for AbstractCollection.
 * Generated by PHPUnit on 2012-07-25 at 09:04:12.
 */
class AbstractCollectionTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var AbstractCollection
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = $this->getMockForAbstractClass(__NAMESPACE__."\AbstractCollection");

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers proof\util\AbstractCollection::add
     * @todo Implement testAdd().
     */
    public function testAdd()
    {

        $this->assertSame($this->object, $this->object->add("one", "mock"));

    }

    /**
     * @covers proof\util\AbstractCollection::getIterator
     * @todo Implement testGetIterator().
     */
    public function testGetIterator()
    {

        $array = array("car"=>"none", "house"=>"none", "bills"=>"plenty");

        $this->object->add("car", "none");
        $this->object->add("house", "none");
        $this->object->add("bills", "none");

        foreach ($this->object as $key => $value)
        {
            $this->assertArrayHasKey($key, $array);
            $this->assertSame("none", $value);
        }

    }

}

?>
