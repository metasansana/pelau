<?php

namespace proof\util;


require_once dirname(__FILE__) . '/../../../../proof/util/Map.php';

/**
 * Test class for Map.
 * Generated by PHPUnit on 2012-07-22 at 09:10:38.
 */
class MapTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Map
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $this->object = new Map(array("one"=>"mock", "two"=>"mock","three"=>"mock"));

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers proof\util\Map::getIterator
     * @todo Implement testGetIterator().
     */
    public function testGetIterator()
    {
          $iter = $this->object->getIterator();

          $count = 0;

          $keys = array("one", "two", "three");

        foreach ($iter as $key=>$value)
        {


            $this->assertEquals($key, $keys[$count]);
            $this->assertEquals($value, "mock");

            $count++;

        }
    }

    public function testSetAndGet()
    {
        $mock =  new \ArrayObject(array('array', 'of', 'things'));

       $this->object->add("fake",$mock);

       $this->assertInstanceOf(get_class($mock), $this->object->get("fake"));
    }

    public function testSizeIsStable()
    {

        $this->object = new Map();

        $this->assertEquals(0, $this->object->size());

        $this->object->add('mock', "nothing");

        $this->assertEquals(1, $this->object->size());
    }

}

?>
